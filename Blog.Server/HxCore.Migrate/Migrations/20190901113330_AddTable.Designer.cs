// <auto-generated />
using System;
using HxCore.Model.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HxCore.Migrate.Migrations
{
    [DbContext(typeof(HxContext))]
    [Migration("20190901113330_AddTable")]
    partial class AddTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("HxCore.Model.BasicInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("Birthday");

                    b.Property<string>("CardId")
                        .HasMaxLength(40);

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Delete")
                        .HasColumnType("char")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("DeleteTime");

                    b.Property<long?>("DeletelId");

                    b.Property<string>("Description")
                        .HasMaxLength(2000);

                    b.Property<string>("Gender")
                        .HasMaxLength(8);

                    b.Property<DateTime?>("LastModifyTime");

                    b.Property<string>("Mobile")
                        .HasMaxLength(40);

                    b.Property<string>("QQ")
                        .HasMaxLength(40);

                    b.Property<string>("RealName")
                        .HasMaxLength(100);

                    b.Property<string>("School")
                        .HasMaxLength(200);

                    b.Property<string>("Telephone")
                        .HasMaxLength(40);

                    b.Property<long>("UserId");

                    b.Property<string>("UserName")
                        .HasMaxLength(50);

                    b.Property<string>("WeChat")
                        .HasMaxLength(40);

                    b.HasKey("Id");

                    b.ToTable("BasicInfo");
                });

            modelBuilder.Entity("HxCore.Model.Blog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BlogTags")
                        .HasMaxLength(40);

                    b.Property<long?>("BlogTypeId");

                    b.Property<string>("CanCmt")
                        .HasColumnType("char")
                        .HasMaxLength(1);

                    b.Property<string>("Carousel")
                        .HasColumnType("char")
                        .HasMaxLength(1);

                    b.Property<long?>("CategoryId");

                    b.Property<string>("City")
                        .HasMaxLength(50);

                    b.Property<long>("CmtCount");

                    b.Property<string>("Content");

                    b.Property<string>("ContentHtml");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Delete")
                        .HasColumnType("char")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("DeleteTime");

                    b.Property<long?>("DeletelId");

                    b.Property<string>("Essence")
                        .HasColumnType("char")
                        .HasMaxLength(1);

                    b.Property<long>("FavCount");

                    b.Property<string>("Forward")
                        .HasColumnType("char")
                        .HasMaxLength(1);

                    b.Property<string>("ForwardUrl")
                        .HasMaxLength(255);

                    b.Property<string>("ImgName")
                        .HasMaxLength(100);

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("LastModifyTime");

                    b.Property<long>("LikeCount");

                    b.Property<string>("Location")
                        .HasMaxLength(255);

                    b.Property<string>("MarkDown")
                        .HasColumnType("char")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("OldPublishTime");

                    b.Property<decimal>("OrderFactor");

                    b.Property<string>("PersonTop")
                        .HasColumnType("char")
                        .HasMaxLength(1);

                    b.Property<string>("Private");

                    b.Property<string>("Publish")
                        .HasColumnType("char")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("PublishDate");

                    b.Property<long>("ReadCount");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Top")
                        .HasColumnType("char")
                        .HasMaxLength(1);

                    b.Property<long>("UserId");

                    b.Property<string>("UserName")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("BlogTypeId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Blog");
                });

            modelBuilder.Entity("HxCore.Model.BlogType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Delete")
                        .HasColumnType("char")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("DeleteTime");

                    b.Property<long?>("DeletelId");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("LastModifyTime");

                    b.Property<string>("Name")
                        .HasMaxLength(40);

                    b.Property<int>("Order");

                    b.Property<long>("UserId");

                    b.Property<string>("UserName")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("BlogType");
                });

            modelBuilder.Entity("HxCore.Model.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Delete")
                        .HasColumnType("char")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("DeleteTime");

                    b.Property<long?>("DeletelId");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("LastModifyTime");

                    b.Property<string>("Name")
                        .HasMaxLength(40);

                    b.Property<int>("Order");

                    b.Property<long>("UserId");

                    b.Property<string>("UserName")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("HxCore.Model.JobInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Delete")
                        .HasColumnType("char")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("DeleteTime");

                    b.Property<long?>("DeletelId");

                    b.Property<string>("GoodAreas")
                        .HasMaxLength(1000);

                    b.Property<string>("Industry")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastModifyTime");

                    b.Property<string>("Position")
                        .HasMaxLength(100);

                    b.Property<string>("Skills")
                        .HasMaxLength(1000);

                    b.Property<string>("Status")
                        .HasMaxLength(20);

                    b.Property<long>("UserId");

                    b.Property<string>("UserName")
                        .HasMaxLength(50);

                    b.Property<string>("WorkUnit")
                        .HasMaxLength(100);

                    b.Property<int>("WorkYear");

                    b.HasKey("Id");

                    b.ToTable("JobInfo");
                });

            modelBuilder.Entity("HxCore.Model.UserInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Activate")
                        .HasColumnType("char")
                        .HasMaxLength(1);

                    b.Property<string>("Admin")
                        .HasColumnType("char")
                        .HasMaxLength(1);

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(500);

                    b.Property<long?>("BasicId");

                    b.Property<string>("Delete")
                        .HasColumnType("char")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("DeleteTime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<long?>("JobId");

                    b.Property<DateTime?>("LastLoginTime");

                    b.Property<string>("Lock")
                        .HasColumnType("char")
                        .HasMaxLength(1);

                    b.Property<string>("LoginIp")
                        .HasMaxLength(100);

                    b.Property<string>("NickName")
                        .HasMaxLength(100);

                    b.Property<string>("OpenId")
                        .HasMaxLength(80);

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<DateTime>("RegisterTime");

                    b.Property<string>("UseMdEdit")
                        .HasColumnType("char")
                        .HasMaxLength(1);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("BasicId");

                    b.HasIndex("JobId");

                    b.ToTable("UserInfo");

                    b.HasData(
                        new
                        {
                            Id = 1000L,
                            Activate = "Y",
                            Admin = "N",
                            Delete = "N",
                            Email = "stjworkemail@163.com",
                            LastLoginTime = new DateTime(2019, 9, 1, 19, 33, 30, 281, DateTimeKind.Local).AddTicks(3168),
                            Lock = "N",
                            NickName = "超级管理员",
                            PassWord = "F59BD65F7EDAFB087A81D4DCA06C4910",
                            RegisterTime = new DateTime(2019, 9, 1, 19, 33, 30, 275, DateTimeKind.Local).AddTicks(3210),
                            UseMdEdit = "N",
                            UserName = "Admin"
                        });
                });

            modelBuilder.Entity("HxCore.Model.Blog", b =>
                {
                    b.HasOne("HxCore.Model.BlogType", "BlogType")
                        .WithMany()
                        .HasForeignKey("BlogTypeId");

                    b.HasOne("HxCore.Model.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("HxCore.Model.UserInfo", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HxCore.Model.UserInfo", b =>
                {
                    b.HasOne("HxCore.Model.BasicInfo", "BasicInfo")
                        .WithMany()
                        .HasForeignKey("BasicId");

                    b.HasOne("HxCore.Model.JobInfo", "JobInfo")
                        .WithMany()
                        .HasForeignKey("JobId");
                });
#pragma warning restore 612, 618
        }
    }
}
