<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HxCore.Entity</name>
    </assembly>
    <members>
        <member name="P:HxCore.Entity.Base.BaseEntity.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:HxCore.Entity.Base.BaseEntity.UserId">
            <summary>
            这条记录属于哪个用户
            </summary>
        </member>
        <member name="P:HxCore.Entity.Base.BaseEntity.UserName">
            <summary>
            用户的登录名称
            </summary>
        </member>
        <member name="P:HxCore.Entity.Base.BaseEntity.IsDelete">
            <summary>
            是否被删除
            </summary>
        </member>
        <member name="P:HxCore.Entity.Base.BaseEntity.DeletelUserId">
            <summary>
            删除人ID
            </summary>
        </member>
        <member name="P:HxCore.Entity.Base.BaseEntity.DeleteTime">
            <summary>
            删除时间
            </summary>
        </member>
        <member name="P:HxCore.Entity.Base.BaseEntity.LastModifyTime">
            <summary>
            最后更新时间
            </summary>
        </member>
        <member name="M:HxCore.Entity.Base.BaseModel.OnPropertyChanged(System.String)">
            <summary>
            属性发生改变时
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:HxCore.Entity.Base.BaseModel.GetPropertyValue(System.String)">
            <summary>
            根据属性的名称获取属性的值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:HxCore.Entity.Base.BaseModel.SetProperty``1(``0@,``0,System.String)">
            <summary>
            根据属性的名称设置属性的值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="prop"></param>
            <param name="value"></param>
            <param name="propertyName"></param>
        </member>
        <member name="P:HxCore.Entity.Base.BaseModel.Item(System.String)">
            <summary>
            索引器，根据属性的名称获取值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:HxCore.Entity.Base.BaseModel.CopyFrom(HxCore.Entity.Base.BaseModel)">
            <summary>
            把指定的模型中值复制到当前模型中
            </summary>
            <param name="model">要复制数据的模型</param>
        </member>
        <member name="T:HxCore.Entity.BasicInfo">
            <summary>
            用户的基本信息
            </summary>
        </member>
        <member name="P:HxCore.Entity.BasicInfo.RealName">
            <summary>
            真实的名字
            </summary>
        </member>
        <member name="P:HxCore.Entity.BasicInfo.CardId">
            <summary>
            身份证号
            </summary>
        </member>
        <member name="P:HxCore.Entity.BasicInfo.Birthday">
            <summary>
            生日
            </summary>
        </member>
        <member name="P:HxCore.Entity.BasicInfo.Gender">
            <summary>
            性别
            </summary>
        </member>
        <member name="P:HxCore.Entity.BasicInfo.QQ">
            <summary>
            用户的QQ
            </summary>
        </member>
        <member name="P:HxCore.Entity.BasicInfo.WeChat">
            <summary>
            用户微信号
            </summary>
        </member>
        <member name="P:HxCore.Entity.BasicInfo.Telephone">
            <summary>
            电话
            </summary>
        </member>
        <member name="P:HxCore.Entity.BasicInfo.Mobile">
            <summary>
            手机号码
            </summary>
        </member>
        <member name="P:HxCore.Entity.BasicInfo.Description">
            <summary>
            自我描述
            </summary>
        </member>
        <member name="P:HxCore.Entity.BasicInfo.Address">
            <summary>
            用户地址
            </summary>
        </member>
        <member name="P:HxCore.Entity.BasicInfo.School">
            <summary>
            用户毕业学校
            </summary>
        </member>
        <member name="P:HxCore.Entity.Blog.Title">
            <summary>
            博客标题
            </summary>
        </member>
        <member name="P:HxCore.Entity.Blog.Content">
            <summary>
            正文
            </summary>
        </member>
        <member name="P:HxCore.Entity.Blog.ContentHtml">
            <summary>
            内容，html格式
            </summary>
        </member>
        <member name="P:HxCore.Entity.Blog.MarkDown">
            <summary>
            是否使用MarkDown编辑的
            </summary>
        </member>
        <member name="P:HxCore.Entity.Blog.Private">
            <summary>
            是否是私人的
            </summary>
        </member>
        <member name="P:HxCore.Entity.Blog.Forward">
            <summary>
            是否是转发文章
            </summary>
        </member>
        <member name="P:HxCore.Entity.Blog.Publish">
            <summary>
            是否发布，true代表发布，false代表不发布即是草稿
            </summary>
        </member>
        <member name="P:HxCore.Entity.Blog.PublishDate">
            <summary>
            发布日期
            </summary>
        </member>
        <member name="P:HxCore.Entity.Blog.Top">
            <summary>
            置顶 Y权值加10年
            </summary>
        </member>
        <member name="P:HxCore.Entity.Blog.Essence">
            <summary>
            精华 Y权值加10天
            </summary>
        </member>
        <member name="P:HxCore.Entity.Blog.ForwardUrl">
            <summary>
            原链接
            </summary>
        </member>
        <member name="P:HxCore.Entity.Blog.OldPublishTime">
            <summary>
            原博客发表时间
            </summary>
        </member>
        <member name="P:HxCore.Entity.Blog.BlogTags">
            <summary>
            博客的个人标签，对应的是BlogTag表中主键，以，号隔开
            </summary>
        </member>
        <member name="P:HxCore.Entity.Blog.CanCmt">
            <summary>
            允许评论
            </summary>
        </member>
        <member name="P:HxCore.Entity.Blog.ReadCount">
            <summary>
            阅读量
            </summary>
        </member>
        <member name="P:HxCore.Entity.Blog.LikeCount">
            <summary>
            博客被推荐的次数
            </summary>
        </member>
        <member name="P:HxCore.Entity.Blog.FavCount">
            <summary>
            被收藏次数
            </summary>
        </member>
        <member name="P:HxCore.Entity.Blog.CmtCount">
            <summary>
            被评论次数
            </summary>
        </member>
        <member name="P:HxCore.Entity.Blog.PersonTop">
            <summary>
            个人置顶 标识该文档是否置顶,置顶的文章在个人主页中排序靠前
            </summary>
        </member>
        <member name="P:HxCore.Entity.Blog.ImgUrl">
            <summary>
            主题中的第一张图的地址
            </summary>
        </member>
        <member name="P:HxCore.Entity.Blog.ImgName">
            <summary>
            主题中第一张图的名字
            </summary>
        </member>
        <member name="P:HxCore.Entity.Blog.Location">
            <summary>
            发改主题时的坐标
            </summary>
        </member>
        <member name="P:HxCore.Entity.Blog.OrderFactor">
            <summary>
            热门程度
            </summary>
        </member>
        <member name="P:HxCore.Entity.Blog.CategoryId">
            <summary>
            系统分类，前端、后端、编程语言等
            </summary> 
        </member>
        <member name="T:HxCore.Entity.BlogType">
            <summary>
            博客的类型
            </summary>
        </member>
        <member name="P:HxCore.Entity.BlogType.Name">
            <summary>
            名字
            </summary>
        </member>
        <member name="P:HxCore.Entity.BlogType.Order">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:HxCore.Entity.BlogType.Description">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:HxCore.Entity.Category">
            <summary>
            博客分类
            </summary>
        </member>
        <member name="P:HxCore.Entity.Category.Name">
            <summary>
            分类名字
            </summary>
        </member>
        <member name="P:HxCore.Entity.Category.Order">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:HxCore.Entity.Category.Description">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:HxCore.Entity.Context.DbFactory">
            <summary>
            数据库上下文工厂
            </summary>
        </member>
        <member name="M:HxCore.Entity.Context.DbFactory.#ctor(System.IServiceProvider)">
            <summary>
            构造函数
            </summary>
            <param name="service">HttpContext</param>
        </member>
        <member name="P:HxCore.Entity.Context.DbFactory.ServiceProvider">
            <summary>
            当前请求的ServiceProvider实例
            </summary>
        </member>
        <member name="M:HxCore.Entity.Context.DbFactory.GetDbContext">
            <summary>
            获取ef上下文
            </summary>
            <returns></returns>
        </member>
        <member name="M:HxCore.Entity.Context.DbFactory.GetRequiredService``1">
            <summary>
            获取使用原生的DI注入的服务类(一般不不用这个，而是使用构造函数注入)
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:HxCore.Entity.Context.DbSession">
            <summary>
            如果没有提供对应模型的服务类，可以使用该方法进行CRUD操作
            </summary>
        </member>
        <member name="T:HxCore.Entity.Context.HxContext">
            <summary>
            数据库上下文
            </summary>
        </member>
        <member name="M:HxCore.Entity.Context.HxContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{HxCore.Entity.Context.HxContext},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            构造函数
            </summary>
            <param name="options">配置</param>
            <param name="loggerFactory">日志工厂</param>
        </member>
        <member name="M:HxCore.Entity.Context.HxContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
            <summary>
            配置
            </summary>
            <param name="optionsBuilder"></param>
        </member>
        <member name="M:HxCore.Entity.Context.HxContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            创建数据
            </summary>
            <param name="modelBuilder"></param>
        </member>
        <member name="P:HxCore.Entity.Context.HxContext.UserInfo">
            <summary>
            用户
            </summary>
        </member>
        <member name="P:HxCore.Entity.Context.HxContext.JobInfo">
            <summary>
            用户工作情况
            </summary>
        </member>
        <member name="P:HxCore.Entity.Context.HxContext.BasicInfo">
            <summary>
            用户基础信息
            </summary>
        </member>
        <member name="P:HxCore.Entity.Context.HxContext.Blog">
            <summary>
            博客
            </summary>
        </member>
        <member name="P:HxCore.Entity.Context.HxContext.BlogType">
            <summary>
            博客类型
            </summary>
        </member>
        <member name="P:HxCore.Entity.Context.HxContext.Category">
            <summary>
            博客分类
            </summary>
        </member>
        <member name="T:HxCore.Entity.Context.IDbFactory">
            <summary>
            数据库上下文工厂
            </summary>
        </member>
        <member name="P:HxCore.Entity.Context.IDbFactory.ServiceProvider">
            <summary>
            当前请求的ServiceProvider实例
            </summary>
        </member>
        <member name="M:HxCore.Entity.Context.IDbFactory.GetDbContext">
            <summary>
            获取数据库上下文
            </summary>
            <returns></returns>
        </member>
        <member name="M:HxCore.Entity.Context.IDbFactory.GetRequiredService``1">
            <summary>
            获取服务的实例
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:HxCore.Entity.Context.IDbSession.QueryById``1(System.Object[])">
            <summary>
             根据Id获取实体数据
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="keyValues">实体的ID</param>
            <returns></returns>
        </member>
        <member name="M:HxCore.Entity.Context.IDbSession.QueryEntity``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            获取满足指定条件的一条数据
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="predicate">获取数据的条件lambda</param>
            <returns>满足当前条件的一个实体</returns>
        </member>
        <member name="T:HxCore.Entity.Dependency.ScropedDependencyAttribute">
            <summary>
            每个请求一个实例
            </summary>
        </member>
        <member name="T:HxCore.Entity.Dependency.SingletonDependencyAttribute">
            <summary>
            单例模式
            </summary>
        </member>
        <member name="T:HxCore.Entity.Dependency.TransientDependencyAttribute">
            <summary>
            每个依赖一个实例(即每次都重新实例),使用每个依赖的作用域, 
            当你解析一个每个依赖一个实例的组件时, 你每次获得一个新的实例.
            </summary>
        </member>
        <member name="M:HxCore.Entity.Extension.DecimalPrecisionAttribute.#ctor(System.Byte,System.Byte)">
            <summary>
            <para>自定义Decimal类型的精确度属性</para>
            </summary>
            <param name="precision">precision
            <para>精度（默认18）</para></param>
            <param name="scale">scale
            <para>小数位数（默认4）</para></param>
        </member>
        <member name="P:HxCore.Entity.Extension.DecimalPrecisionAttribute.Precision">
            <summary>
            精确度（默认18）
            </summary>
        </member>
        <member name="P:HxCore.Entity.Extension.DecimalPrecisionAttribute.Scale">
            <summary>
            保留位数（默认4）
            </summary>
        </member>
        <member name="P:HxCore.Entity.JobInfo.Position">
            <summary>
            职位
            </summary>
        </member>
        <member name="P:HxCore.Entity.JobInfo.Industry">
            <summary>
            行业
            </summary>
        </member>
        <member name="P:HxCore.Entity.JobInfo.WorkUnit">
            <summary>
            工作单位
            </summary>
        </member>
        <member name="P:HxCore.Entity.JobInfo.WorkYear">
            <summary>
            工作年限
            </summary>
        </member>
        <member name="P:HxCore.Entity.JobInfo.Status">
            <summary>
            目前状态
            </summary>
        </member>
        <member name="P:HxCore.Entity.JobInfo.Skills">
            <summary>
            熟悉的技术
            </summary>
        </member>
        <member name="P:HxCore.Entity.JobInfo.GoodAreas">
            <summary>
            擅长的领域
            </summary>
        </member>
        <member name="P:HxCore.Entity.AjaxResult.Success">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="P:HxCore.Entity.AjaxResult.Message">
            <summary>
            信息描述
            </summary>
        </member>
        <member name="P:HxCore.Entity.AjaxResult.Code">
            <summary>
            获取 Ajax操作结果编码
            </summary>
        </member>
        <member name="P:HxCore.Entity.AjaxResult.Data">
            <summary>
            获取 返回数据
            </summary>
        </member>
        <member name="T:HxCore.Entity.NoAuthorizeException">
            <summary>
            没有被授权的异常
            </summary>
        </member>
        <member name="P:HxCore.Entity.UserInfo.UserName">
            <summary>
            用户名称
            </summary>
        </member>
        <member name="P:HxCore.Entity.UserInfo.PassWord">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:HxCore.Entity.UserInfo.NickName">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:HxCore.Entity.UserInfo.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:HxCore.Entity.UserInfo.OpenId">
            <summary>
            第三方登录唯一标识
            </summary>
        </member>
        <member name="P:HxCore.Entity.UserInfo.AvatarUrl">
            <summary>
            头像存储文件路径
            </summary>
        </member>
        <member name="P:HxCore.Entity.UserInfo.IsAdmin">
            <summary>
            是否是管理员
            </summary>
        </member>
        <member name="P:HxCore.Entity.UserInfo.IsActivate">
            <summary>
            是否激活
            </summary>
        </member>
        <member name="P:HxCore.Entity.UserInfo.Activate">
            <summary>
            是否激活
            </summary>
        </member>
        <member name="P:HxCore.Entity.UserInfo.RegisterTime">
            <summary>
            用户注册时间
            </summary>
        </member>
        <member name="P:HxCore.Entity.UserInfo.IsDeleted">
            <summary>
            是否被删除,假删除，数据库中还有记录
            </summary>
        </member>
        <member name="P:HxCore.Entity.UserInfo.Delete">
            <summary>
            是否被删除,假删除，数据库中还有记录
            </summary>
        </member>
        <member name="P:HxCore.Entity.UserInfo.DeleteTime">
            <summary>
            删除时间
            </summary>
        </member>
        <member name="P:HxCore.Entity.UserInfo.IsUseMdEdit">
            <summary>
            使用MarkDown编辑器
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:HxCore.Entity.UserInfo.UseMdEdit" -->
        <member name="P:HxCore.Entity.UserInfo.LoginIp">
            <summary>
            登录的ip
            </summary>
        </member>
        <member name="P:HxCore.Entity.UserInfo.LastLoginTime">
            <summary>
            最后更新时间
            </summary>
        </member>
        <member name="P:HxCore.Entity.UserInfo.BasicInfoId">
            <summary>
            基础信息
            </summary>
        </member>
        <member name="P:HxCore.Entity.UserInfo.JobInfoId">
            <summary>
            工作信息
            </summary>
        </member>
    </members>
</doc>
